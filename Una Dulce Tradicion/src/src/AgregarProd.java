/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet; 
import javax.swing.JOptionPane;
/**
 *
 * @author eliez
 */
public class AgregarProd extends javax.swing.JDialog {

    static String Driver="com.microsoft.sqlserver.jdbc.SQLServerDriver";
    static String URL="jdbc:sqlserver://localhost:1433;DatabaseName=cafeteria;";

    static String user="sa";
    static String pass="sa";
	
    static Connection con=null;
    static Statement stmt = null;
    static ResultSet rs = null;
    int id;
    /**
     * Creates new form AgregarProd
     */
    public AgregarProd(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPrecio = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnObetener = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtCantidadEx = new javax.swing.JTextField();
        txtIdP = new javax.swing.JTextField();
        ComboTam = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        ComboTipoP = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        txtNombreP = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar producto");

        txtPrecio.setEditable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Agregar productos");

        btnObetener.setText("Obtener clave");
        btnObetener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObetenerActionPerformed(evt);
            }
        });

        jLabel2.setText("Clave del producto:");

        txtCantidadEx.setEditable(false);

        txtIdP.setEditable(false);

        ComboTam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chico", "Mediano", "Grande"}));

        jLabel3.setText("Nombre del producto:");

        ComboTipoP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bebida", "Postre"}));

        jLabel4.setText("Tipo de producto:");

        jLabel5.setText("Precio del producto:");

        jLabel6.setText("Tama√±o del producto");

        jLabel7.setText("Cantidad existente:");

        btnAgregar.setText("Agregar producto");
        btnAgregar.setEnabled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        txtNombreP.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtIdP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnObetener, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCantidadEx)
                            .addComponent(ComboTam, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ComboTipoP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(124, 124, 124)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnObetener, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombreP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ComboTipoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ComboTam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCantidadEx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAgregar)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnObetenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObetenerActionPerformed
        String i;
        try{
            //Se carga el driver
            Class.forName(Driver);
            con= DriverManager.getConnection(URL,user,pass);
            Statement st = con.createStatement();
            rs = st.executeQuery("execute buscarIdentificador 1");
            rs.next();
            id = rs.getInt(10);
            i = String.valueOf(id);
            if(id<= 9){
                txtIdP.setText("00"+i);
            }
            else{
                if(id<=99){
                    txtIdP.setText("0"+i);
                }
                else{
                    txtIdP.setText(i);
                }
            }
            txtIdP.setEditable(false);
            txtNombreP.setEditable(true);
            ComboTipoP.setEnabled(true);
            txtPrecio.setEditable(true);
            ComboTam.setEnabled(true);
            txtCantidadEx.setEditable(true);
            btnObetener.setEnabled(false);
            btnAgregar.setEnabled(true);
            if(con!=null){
                con.close();
            }
        }
        catch(java.lang.ClassNotFoundException e){
            System.out.println(e.getMessage());
            System.out.println("Problemas al cargar el driver ");
        }
        catch(SQLException ex){
            System.out.println("No se ha realizado la conexion");
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnObetenerActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String b, c;
        int cont =0, cont1 = 0, cont2 = 0;
        int inse;
        String cantidad1 = txtCantidadEx.getText();
        String precio1 = txtPrecio.getText();
        if(txtNombreP.getText().length() > 0 && txtPrecio.getText().length() > 0 && txtCantidadEx.getText().length() > 0){
            for(int x=0; x<txtNombreP.getText().length(); x++){
                if(txtNombreP.getText().charAt(x) >= 65 && txtNombreP.getText().charAt(x) <= 90 || txtNombreP.getText().charAt(x) >= 97 && txtNombreP.getText().charAt(x) <= 122 || txtNombreP.getText().charAt(x) == '√ë' ||  txtNombreP.getText().charAt(x) == '√±' || txtNombreP.getText().charAt(x) == '√°' || txtNombreP.getText().charAt(x) == '√≠' || txtNombreP.getText().charAt(x) == '√≥' || txtNombreP.getText().charAt(x) == '√∫' || txtNombreP.getText().charAt(x) == '√©' || txtNombreP.getText().charAt(x) == '√Å' || txtNombreP.getText().charAt(x) == '√â' || txtNombreP.getText().charAt(x) == '√ç' || txtNombreP.getText().charAt(x) == '√ì' || txtNombreP.getText().charAt(x) == '√ö' || txtNombreP.getText().charAt(x) == 32 || txtNombreP.getText().charAt(x) == 46){
                    cont++;
                }
            }
            if(cont == txtNombreP.getText().length()){
                if(txtNombreP.getText().length()<= 50){
                    if(ComboTipoP.getSelectedItem().equals("Postre")){
                        b="P";
                    }
                    else{
                        b="B";
                    }
                    //Validacion del precio
                    for(int x=0; x<precio1.length(); x++){
                        if(precio1.charAt(x) >= 48 && precio1.charAt(x) <= 57 || precio1.charAt(x) == 46){
                            cont1++;
                        }
                    }
                    if(cont1 == precio1.length()){
                        float precio = Float.parseFloat(precio1);
                        if(precio >= 1 && precio < 1000){
                            if(ComboTam.getSelectedItem().equals("Chico")){
                                c="CH";
                            }
                            else{
                                if(ComboTam.getSelectedItem().equals("Mediano")){
                                    c="ME";
                                }
                                else{
                                    c="GR";
                                }
                            }
                            for(int x=0; x<cantidad1.length(); x++){
                                if(cantidad1.charAt(x) >= 48 && cantidad1.charAt(x) <= 57){
                                    cont2++;
                                }
                            }
                            if(cont2 == cantidad1.length()){
                                int cantidad = Integer.parseInt(cantidad1);
                                if(cantidad >= 1 && cantidad < 1000){
                                    //todo esta bien
                                    try{
                                        Class.forName(Driver);
                                        con= DriverManager.getConnection(URL,user,pass);
                                        Statement st = con.createStatement();
                                        inse = st.executeUpdate("execute agregarProductos'"+txtIdP.getText()+"',"+"'"+txtNombreP.getText()+"',"+"'"+b+"',"+"'"+txtPrecio.getText()+"',"+"'"+c+"',"+"'"+txtCantidadEx.getText()+"'");
                                        inse = st.executeUpdate("execute modificarIdentiProd "+String.valueOf(id+1));
                                        JOptionPane.showMessageDialog(this, "El producto ha sido registrado",
                                            "Producto registrado", JOptionPane.INFORMATION_MESSAGE);
                                        this.dispose();
                                        if(con != null){
                                            con.close();
                                        }
                                    }
                                    catch(java.lang.ClassNotFoundException e){
                                        System.out.println(e.getMessage());
                                        System.out.println("Problemas al cargar el driver ");
                                    }
                                    catch(SQLException ex){
                                        System.out.println("No se ha realizado la conexion");
                                        System.out.println(ex.getMessage());
                                    }
                                }
                                else{
                                    JOptionPane.showMessageDialog(this, "Caracteres excedidos, solo de aceptan n√∫meros 1 - 999",
                                        "Cantidad incorrecta", JOptionPane.ERROR_MESSAGE);
                                }
                            }
                            else{
                                JOptionPane.showMessageDialog(this, "La cantidad solo admite numeros de 0-9 ",
                                    "Datos no validos", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        else{
                            JOptionPane.showMessageDialog(this, "Caracteres excedidos, solo de aceptan n√∫meros 1- 999.99",
                                "Precio incorrecto", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "El precio solo admite numeros de 0-9 y punto",
                            "Datos no validos", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this, "Solo se aceptan hasta 50 car√°cteres",
                        "N√∫mero de car√°cteres excedido", JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "El nombre solo pueder ser compuesto solo por car√°cteres de A-Z y de a-z puntos, comas y espacios",
                    "Datos no v√°lidos", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Revise que todos los campos hayan sido llenados",
                "Datos no llenados", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboTam;
    private javax.swing.JComboBox<String> ComboTipoP;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnObetener;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtCantidadEx;
    private javax.swing.JTextField txtIdP;
    private javax.swing.JTextField txtNombreP;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
