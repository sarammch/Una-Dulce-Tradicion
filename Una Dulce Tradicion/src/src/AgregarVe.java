/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author saram
 */

public class AgregarVe extends javax.swing.JDialog {

    static ResultSet rs;
    
    /**
     * Creates new form AgregarVe
     */
    //Este arreglo guarda los IdP
    String prC[];
    //Este arreglo guarda el subtotal de producto
    float prSub[];
    //Este arreglo guarda la cantidad de compra
    int prCan[];
    //Este arreglo guarda la existencia para modificarla
    int Exi[];
    //Para saber cuantos productos van
    int contP=0;
    
    
    String IdV;
    String IdP;
    int CantidadV;
    float SubtotalV;
    String IdTra;
    String IdC;
    float TotalV =0;
    char TipoPago;
    String FechaV;
    //envia guardar con esto escrito
    String cadena;
    String consulta;
    //Para validar las claves
    int cont2=0;
    int contArreglo;
    String i;
    int id;
    
    public AgregarVe(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        coTipoPago = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtIdV = new javax.swing.JTextField();
        txtIdP = new javax.swing.JTextField();
        txtIdC = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnBuscarProducto = new javax.swing.JButton();
        btnFinalizarVenta = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtFechaV = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNomP = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTotalV = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtNomTra = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnBuscar2 = new javax.swing.JButton();
        btnAgregarDatos = new javax.swing.JButton();
        txtIdTra = new javax.swing.JTextField();
        txtNomC = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnGenerar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar Venta");
        setSize(new java.awt.Dimension(1033, 756));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("CLAVE DE VENTA: ");

        jLabel2.setText("CLAVE DE PRODUCTO:");

        jLabel3.setText("CLAVE DE TRABAJADOR:");

        jLabel4.setText("CLAVE DE CLIENTE:");

        jLabel5.setText("CANTIDAD: ");

        coTipoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Contado", "Tarjeta" }));
        coTipoPago.setEnabled(false);
        coTipoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coTipoPagoActionPerformed(evt);
            }
        });

        jLabel6.setText("TIPO DE PAGO: ");

        txtIdV.setEditable(false);
        txtIdV.setBackground(new java.awt.Color(255, 255, 204));
        txtIdV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdVActionPerformed(evt);
            }
        });

        txtIdP.setEditable(false);
        txtIdP.setBackground(new java.awt.Color(204, 204, 255));

        txtIdC.setBackground(new java.awt.Color(204, 255, 255));
        txtIdC.setSelectionColor(new java.awt.Color(204, 255, 255));

        txtCantidad.setEditable(false);
        txtCantidad.setBackground(new java.awt.Color(204, 204, 255));

        btnBuscar.setText("BUSCAR");
        btnBuscar.setEnabled(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.setEnabled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBuscarProducto.setText("BUSCAR PRODUCTO");
        btnBuscarProducto.setEnabled(false);
        btnBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductoActionPerformed(evt);
            }
        });

        btnFinalizarVenta.setText("FINALIZAR VENTA");
        btnFinalizarVenta.setEnabled(false);
        btnFinalizarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarVentaActionPerformed(evt);
            }
        });

        jLabel7.setText("FECHA DE VENTA:");

        txtFechaV.setEditable(false);
        txtFechaV.setBackground(new java.awt.Color(204, 255, 255));

        jLabel8.setText("NOMBRE PRODUCTO:");

        txtNomP.setEditable(false);
        txtNomP.setBackground(new java.awt.Color(204, 204, 255));

        jLabel9.setText("Total:");

        txtTotalV.setEditable(false);

        jLabel10.setText("NOMBRE DE TRABAJADOR:");

        txtNomTra.setEditable(false);
        txtNomTra.setBackground(new java.awt.Color(204, 255, 255));

        jLabel11.setText("NOMBRE DEL CLIENTE:");

        btnBuscar2.setText("BUSCAR");
        btnBuscar2.setEnabled(false);
        btnBuscar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar2ActionPerformed(evt);
            }
        });

        btnAgregarDatos.setText("AGREGAR DATOS");
        btnAgregarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarDatosActionPerformed(evt);
            }
        });

        txtIdTra.setBackground(new java.awt.Color(204, 255, 255));

        txtNomC.setEditable(false);
        txtNomC.setBackground(new java.awt.Color(204, 255, 255));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave del producto", "Nombre del Producto", "Precio", "Cantidad", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setResizable(false);
            tabla.getColumnModel().getColumn(0).setPreferredWidth(150);
            tabla.getColumnModel().getColumn(1).setResizable(false);
            tabla.getColumnModel().getColumn(1).setPreferredWidth(200);
            tabla.getColumnModel().getColumn(2).setResizable(false);
            tabla.getColumnModel().getColumn(3).setResizable(false);
            tabla.getColumnModel().getColumn(4).setResizable(false);
        }

        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(btnGenerar)
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNomTra)
                                    .addComponent(txtIdC, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(txtIdTra)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAgregarDatos)
                                    .addComponent(txtNomC, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscar)
                            .addComponent(btnBuscar2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAgregar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNomP, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(coTipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtFechaV)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnFinalizarVenta))
                                                    .addGap(0, 79, Short.MAX_VALUE))))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtIdV, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtIdP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBuscarProducto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)))))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotalV, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtIdTra))
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtIdV, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomTra, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGenerar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAgregarDatos)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdP, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarProducto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregar))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coTipoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFechaV, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFinalizarVenta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotalV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(127, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdVActionPerformed
        txtIdV.setEditable(false);
    }//GEN-LAST:event_txtIdVActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String auxTra = txtIdTra.getText();
        
        if (auxTra.length() == 2){
            if(Character.isDigit(auxTra.charAt(0))&& Character.isDigit(auxTra.charAt(1))){
                try{
                    //obtiene el idTra y lo busca en la tabla
                    consulta="execute consultarTra '"+ auxTra +"'";
                    rs = Conexion.Consulta(consulta);
                    rs.next();
                    if(rs.getString(1).equals(auxTra) && rs.getString(2) != null){
                        txtNomTra.setText(rs.getString(2));
                        txtIdTra.setEditable(false);
                        //esto es para saber que ya ingreso las 2 claves
                        cont2 ++;
                        btnBuscar.setEnabled(false);
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "EL trabajador no existe", 
                        "Trabajador no existente", JOptionPane.ERROR_MESSAGE);
                    }
                }
                catch(SQLException e){
                    JOptionPane.showMessageDialog(this, "La clave no existe", 
                        "Clave no valida", JOptionPane.ERROR_MESSAGE);
                    txtIdTra.setText("");
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "La clave del trabajador debe ser una cadena de 2 digitos 0-9", 
                    "Clave no valida", JOptionPane.ERROR_MESSAGE);
                txtIdTra.setText("");
            }     
        }
        else{
            JOptionPane.showMessageDialog(this, "La clave del trabajador debe ser una cadena de 2 digitos 0-9", 
                    "Clave no valida", JOptionPane.ERROR_MESSAGE);
            txtIdTra.setText("");
        }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductoActionPerformed
        String auxP = txtIdP.getText();
        if (auxP.length() == 3){
            if(Character.isDigit(auxP.charAt(0))&& Character.isDigit(auxP.charAt(1))&& Character.isDigit(auxP.charAt(2))){
                try{
                    //obtiene el id ingresado y lo busca en la tabla
                    consulta="execute consultarProd '"+ auxP+"'";
                    rs = Conexion.Consulta(consulta);
                    rs.next();
                    if(rs.getString(1).equals(auxP) && rs.getString(2) != null){
                        txtNomP.setText(rs.getString(2));
                        txtCantidad.setEditable(true);
                        btnAgregar.setEnabled(true);     
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "La clave no existe", 
                            "Clave no valida", JOptionPane.ERROR_MESSAGE);
                    }
                }
                catch(SQLException e){
                    JOptionPane.showMessageDialog(this, "La clave no existe", 
                            "Clave no valida", JOptionPane.ERROR_MESSAGE);
                        txtNomP.setText("");
                        txtIdC.setText("");
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "La clave del producto debe ser una cadena de 3 digitos 0-9", 
                    "Clave invalida", JOptionPane.ERROR_MESSAGE);
                txtIdP.setText("");
            }     
        }
        else{
            JOptionPane.showMessageDialog(this, "La clave del producto debe ser una cadena de 3 digitos 0-9", 
                    "Clave no valida", JOptionPane.ERROR_MESSAGE);
            txtIdP.setText("");
        }
    }//GEN-LAST:event_btnBuscarProductoActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        //Crea el modelo para la tabla
        DefaultTableModel modelo =(DefaultTableModel) tabla.getModel();
        String auxCant = txtCantidad.getText();
        int contB = 0;
        boolean ban = true;
        int aCant;
        int cont1=0;
        //validaciones
        for (int x=0; x<auxCant.length(); x++){
            if (Character.isDigit(auxCant.charAt(x))){
                cont1 ++;  
            }
        }
        if(cont1 == auxCant.length() && cont1!=0){
            aCant = Integer.parseInt(auxCant);
            //valida que la cantidad sea mayor que 0
            if(aCant > 0 && aCant < 1000){
                try{
                    //con esto se valida que haya en existencia para esa cantidad
                    consulta="execute consultarProd '"+ txtIdP.getText()+"'";
                    rs = Conexion.Consulta(consulta);
                    rs.next();
                    if(rs.getInt(6) >= aCant){
                        //itera entre el arreglo para buscar si el producto agregado ya fue agregado con anterioridad
                        if(contP != 0){
                            for(int y=0; y<contP; y++){
                                if(prC[y].equals(txtIdP.getText())){ 
                                    contB++;
                                } 
                            }
                        }
                        if(contB==0){
                            int r = JOptionPane.showConfirmDialog(this, "¿Esta seguro de Agregar Producto?",
                                "CONFIRMAR PRODUCTO",
                                JOptionPane.YES_NO_OPTION, 
                                JOptionPane.QUESTION_MESSAGE, null);
                            if(r == JOptionPane.YES_OPTION){
                                //aqui guarda en los arreglos los idP, Cantidad y el subtotal ademas la existencia
                                prC[contP]=txtIdP.getText();
                                prCan[contP]=aCant;
                                Exi[contP]=(rs.getInt(6)-aCant);
                                //multiplica la cantidad por el costo para sacar el subtotal
                                SubtotalV = (float)aCant*(rs.getFloat(4));
                                prSub[contP]=SubtotalV;
                                //al agregar en el arreglo se aumenta la posicion
                                contP++;
                                //Se van sumando los subtotales para sacar el total de la compra
                                TotalV=TotalV+SubtotalV;
                                //crea un vector y lo agrega a la tabla
                                Vector v = new Vector();
                                v.add(rs.getString(1));
                                v.add(rs.getString(2));
                                v.add(String.valueOf(rs.getFloat(4)));
                                v.add(String.valueOf(aCant));
                                v.add(String.valueOf(SubtotalV));
                                modelo.addRow(v);
                                tabla.setModel(modelo);
                                txtTotalV.setText(String.valueOf(TotalV));
                                //habilita y deshabilita cosas
                                txtCantidad.setEditable(false);
                                txtIdP.setText("");
                                txtNomP.setText("");
                                txtCantidad.setText("");
                                btnAgregar.setEnabled(false);
                                btnFinalizarVenta.setEnabled(true);
                                coTipoPago.setEnabled(true);
                                txtFechaV.setEditable(true);
                            }
                        }
                        else{
                            JOptionPane.showMessageDialog(this, "Ese producto ya fue agregado", 
                                "PRODUCTO REPETIDO", JOptionPane.ERROR_MESSAGE);
                            txtIdP.setText("");
                            txtNomP.setText("");
                            txtCantidad.setText("");
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(this, ("Solo hay "+ rs.getInt(6) + " en existencia"), 
                            "Cantidad no valida", JOptionPane.ERROR_MESSAGE);
                    }
                }
                catch(SQLException e){}
            }
            else{
                JOptionPane.showMessageDialog(this, "La cantidad debe ser un numero entero de 0-999", 
                    "Cantidad no valida", JOptionPane.ERROR_MESSAGE);
                txtCantidad.setText("");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "La cantidad debe ser un numero entero", 
                "Cantidad no valida", JOptionPane.ERROR_MESSAGE);
            txtCantidad.setText("");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnFinalizarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarVentaActionPerformed
        //Inivia el total en 0
        TotalV=0;
        FechaV = txtFechaV.getText();
        if(coTipoPago.getSelectedItem().equals("Contado")){
            TipoPago = 'C';
            
        }
        else{
            TipoPago = 'T';
        }
        if (FechaV.length() == 10){
            //Valida que este en el formato de 00/00/00
            if(Character.isDigit(FechaV.charAt(0))&& Character.isDigit(FechaV.charAt(1)) && FechaV.charAt(2) == '/'
                && Character.isDigit(FechaV.charAt(3)) && Character.isDigit(FechaV.charAt(4)) && FechaV.charAt(5) == '/'
                && Character.isDigit(FechaV.charAt(6)) && Character.isDigit(FechaV.charAt(7)) 
                && Character.isDigit(FechaV.charAt(8)) && Character.isDigit(FechaV.charAt(9))){
                //Confirma compra
                int r = JOptionPane.showConfirmDialog(this, "¿Esta seguro de Finalizar Venta?",
                        "CONFIRMAR VENTA",
                        JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE, null);
                if(r == JOptionPane.YES_OPTION){
                    String cadena1;
                    String cadena2;
                    String cadena3;
                    String cadena4;
                    IdV = txtIdV.getText();
                    for(int x=0; x<contP; x++){
                        //Agrega cada uno de los productos del arreglo a la tabla
                        cadena1 = "execute agregarVenta '"+IdV+"',"+"'"+prC[x]+"',"+prCan[x]+","+prSub[x];
                        Conexion.Enviar(cadena1);
                        //Modifica la existencia de los productos
                        cadena2 = "execute modificarExPro "+Exi[x]+", '"+prC[x]+"'";
                        Conexion.Enviar(cadena2);
                        //Suma los subtotales para sacar el total
                        TotalV += prSub[x];
                    }
                    //Agrega datos a la tabla encabezado Ventas
                    cadena4 = "execute agregarVenta2 '"+IdV+"', '"+IdC+"', '"+IdTra+"', "+TotalV+", '"+TipoPago+"', '"+FechaV+"'";
                    Conexion.Enviar(cadena4);
                    //Se aumenta el numero de registros de ventas
                    id++;
                    cadena3 = "execute modificarIdentiVenta "+id;
                    Conexion.Enviar(cadena3);
                    //Al finalizar la compra el puntero del arreglo se manda al 0
                    contP=0;
                    TotalV=0;
                    txtFechaV.setText("");
                    this.dispose();
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "La Fecha debe estar en el formato 00/00/0000 con BARRAS", 
                    "FORMATO NO VALIDO", JOptionPane.ERROR_MESSAGE);
                txtFechaV.setText("");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "La Fecha debe estar en el formato 00/00/0000 con BARRAS", 
                "FORMATO NO VALIDO", JOptionPane.ERROR_MESSAGE);
            txtFechaV.setText(""); 
        }
        
    }//GEN-LAST:event_btnFinalizarVentaActionPerformed

    private void btnBuscar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar2ActionPerformed
        String auxCli = txtIdC.getText();
        int cont1=0;
        for (int x=1; x<auxCli.length(); x++){
            if (Character.isDigit(auxCli.charAt(x))){
                cont1 ++;  
            }
        }
        if (auxCli.length() == 4){
            if(auxCli.charAt(0) == 'C' && cont1 == 3){
                try{
                    //busca la clave del cliente
                    cadena="execute consultarCli '"+ txtIdC.getText()+"'";
                    rs = Conexion.Consulta(cadena);
                    rs.next();
                    if(rs.getString(1).equals(auxCli) && rs.getString(2) != null){
                        txtNomC.setText(rs.getString(2));
                        txtIdC.setEditable(false);
                        //esto es para saber que ya ingreso las 2 claves
                        cont2 ++;
                        btnBuscar2.setEnabled(false);
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "La clave no existe", 
                            "Clave no valida", JOptionPane.ERROR_MESSAGE);
                    }
                }
                catch(SQLException e){
                    JOptionPane.showMessageDialog(this, "La clave no existe", 
                        "Clave no valida", JOptionPane.ERROR_MESSAGE);
                    txtIdC.setText("");
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "La clave del Clientes debe ser una cadena que empieza con C mas 3 digitos 0-9", 
                    "Clave no valida", JOptionPane.ERROR_MESSAGE);
                txtIdC.setText("");
            }     
        }
        else{
            JOptionPane.showMessageDialog(this, "La clave del Clientes debe ser una cadena que empieza con C mas 3 digitos 0-9", 
                    "Clave no valida", JOptionPane.ERROR_MESSAGE);
            txtIdC.setText("");
        }
    }//GEN-LAST:event_btnBuscar2ActionPerformed

    private void btnAgregarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarDatosActionPerformed
        //valida que se hayan ingresado las claves del trabajador y del cliente
        if(cont2 >= 2){
            int res = JOptionPane.showConfirmDialog(this, "¿Esta seguro de Agregar los datos?",
                "GUARDAR CLAVES",
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE, null);
            if(res == JOptionPane.YES_OPTION){
                IdTra = txtIdTra.getText();
                IdC = txtIdC.getText();
                txtIdC.setEditable(false);
                txtIdTra.setEditable(false);
                btnBuscar.setEnabled(false);
                btnBuscar2.setEnabled(false);
                btnAgregarDatos.setEnabled(false);
                btnBuscarProducto.setEnabled(true);
                txtIdP.setEditable(true);
             }
            else{
                //si no lo agrega borra los datos de cliente y trabajador
                txtIdTra.setText("");
                txtIdC.setText("");
                txtNomTra.setText("");
                txtNomC.setText("");
                txtIdC.setEditable(true);
                txtIdTra.setEditable(true);
                btnBuscar.setEnabled(true);
                btnBuscar2.setEnabled(true);
            }   
        }
        else{
            JOptionPane.showMessageDialog(this, "Debe escoger las dos claves Clientes y Trabajador", 
                "INCORRECTO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarDatosActionPerformed

    private void coTipoPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coTipoPagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coTipoPagoActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        String i;
        String consulta;
        try{
            //se creó una tabla para guardar el numero de datos que hay para asi generar lo Id
            consulta = "execute buscarIdentificador 1";
            rs = Conexion.Consulta(consulta);
            rs.next();
            id = rs.getInt(6);
            i = String.valueOf(id);
            if(id<= 9){
                txtIdV.setText("000000"+i);
            }else if(id<=99){
                txtIdV.setText("00000"+i);
            }else if(id<=999){
                txtIdV.setText("0000"+i);
            } else if(id<=9999){
                txtIdV.setText("000"+i);
            }else if(id<=99999){
                txtIdV.setText("00"+i);
            }else if(id<=999999){
                txtIdV.setText("0"+i);
            }else{
                txtIdV.setText(i);
            }
            txtIdC.setEditable(true);
            txtIdTra.setEditable(true);
            btnBuscar.setEnabled(true);
            btnBuscar2.setEnabled(true);
            btnGenerar.setEnabled(false);
        }
        catch(SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try{
            //cuenta la cantidad de productos par saber cuando se pueden agregar a la venta       
            consulta="execute cuentaProductos";
            rs = Conexion.Consulta(consulta);
            rs.next();
            contArreglo = rs.getInt(1); 
            if(contArreglo!=0){
                //Esta inicializando los arreglos con el tamaño de la cantidad de productos que tenemos
                //para mandarlo a la tabla
                prC = new String[contArreglo];
                prSub = new float[contArreglo];
                prCan = new int[contArreglo];
                Exi = new int[contArreglo];
             }
             else{
                JOptionPane.showMessageDialog(this, "NO SE PUEDE REALIZAR UNA VENTA SI NO HAY PRODUCTOS", 
                            "VENTAS", JOptionPane.ERROR_MESSAGE);
                this.dispose();
            }
        }
        catch(SQLException e){}
    }//GEN-LAST:event_formWindowOpened

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregarDatos;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscar2;
    private javax.swing.JButton btnBuscarProducto;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnFinalizarVenta;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JComboBox<String> coTipoPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtFechaV;
    private javax.swing.JTextField txtIdC;
    private javax.swing.JTextField txtIdP;
    private javax.swing.JTextField txtIdTra;
    private javax.swing.JTextField txtIdV;
    private javax.swing.JTextField txtNomC;
    private javax.swing.JTextField txtNomP;
    private javax.swing.JTextField txtNomTra;
    private javax.swing.JTextField txtTotalV;
    // End of variables declaration//GEN-END:variables
}
