/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet; 
import javax.swing.JOptionPane;
/**
 *
 * @author eliez
 */
public class ModificarTra extends javax.swing.JDialog {

    static String Driver="com.microsoft.sqlserver.jdbc.SQLServerDriver";
    static String URL="jdbc:sqlserver://localhost:1433;DatabaseName=cafeteria;";

    static String user="sa";
    static String pass="sa";
	
    static Connection con=null;
    static Statement stmt = null;
    static ResultSet rs = null;
    /**
     * Creates new form ModificarTra
     */
    public ModificarTra(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        txtAPTra = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        txtAMTra = new javax.swing.JTextField();
        Combo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtSueldo = new javax.swing.JTextField();
        txtIdTra = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNomTra = new javax.swing.JTextField();
        btnmodificarIdTra = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modificar trabajador");

        jLabel7.setText("Turno:");

        txtAPTra.setEditable(false);

        btnGuardar.setText("Guardar cambios");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        txtAMTra.setEditable(false);

        Combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "V"}));
        Combo.setEnabled(false);

        jLabel2.setText("Clave del trabajador:");

        txtSueldo.setEditable(false);

        jLabel3.setText("Nombre:");

        jLabel4.setText("Apellido Paterno:");

        jLabel5.setText("Apellido Materno:");

        jLabel6.setText("Sueldo:");

        txtNomTra.setEditable(false);

        btnmodificarIdTra.setText("Buscar clave");
        btnmodificarIdTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodificarIdTraActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Modificar Trabajador");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtNomTra)
                            .addComponent(txtAPTra)
                            .addComponent(txtAMTra)
                            .addComponent(txtSueldo)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(txtIdTra, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnmodificarIdTra, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Combo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(btnGuardar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnmodificarIdTra, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNomTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtAPTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtAMTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnGuardar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int cont =0;
        int inse;
        if(txtNomTra.getText().length() > 0 && txtAPTra.getText().length() > 0 && txtAMTra.getText().length() >0 &&  txtSueldo.getText().length() >0){
            for(int x=0; x<txtNomTra.getText().length(); x++){
                if(txtNomTra.getText().charAt(x) >= 65 && txtNomTra.getText().charAt(x) <= 90 || txtNomTra.getText().charAt(x) >= 97 && txtNomTra.getText().charAt(x) <= 122 || txtNomTra.getText().charAt(x) == 'Ñ' ||  txtNomTra.getText().charAt(x) == 'ñ' || txtNomTra.getText().charAt(x) == 'á' || txtNomTra.getText().charAt(x) == 'í' || txtNomTra.getText().charAt(x) == 'ó' || txtNomTra.getText().charAt(x) == 'ú' || txtNomTra.getText().charAt(x) == 'é' || txtNomTra.getText().charAt(x) == 'Á' || txtNomTra.getText().charAt(x) == 'É' || txtNomTra.getText().charAt(x) == 'Í' || txtNomTra.getText().charAt(x) == 'Ó' || txtNomTra.getText().charAt(x) == 'Ú' || txtNomTra.getText().charAt(x) == 32 || txtNomTra.getText().charAt(x) == 46){
                    cont++;
                }
            }
            if(cont == txtNomTra.getText().length()){
                if(txtNomTra.getText().length()<= 25){
                    //validacion apellido paterno
                    int cont1 =0;
                    for(int x=0; x<txtAPTra.getText().length(); x++){
                        if(txtAPTra.getText().charAt(x) >= 65 && txtAPTra.getText().charAt(x) <= 90 || txtAPTra.getText().charAt(x) >= 97 && txtAPTra.getText().charAt(x) <= 122 || txtAPTra.getText().charAt(x) == 'Ñ' ||  txtAPTra.getText().charAt(x) == 'ñ' || txtAPTra.getText().charAt(x) == 'á' || txtAPTra.getText().charAt(x) == 'í' || txtNomTra.getText().charAt(x) == 'ó' || txtNomTra.getText().charAt(x) == 'ú' || txtAPTra.getText().charAt(x) == 'é' || txtAPTra.getText().charAt(x) == 'Á' || txtAPTra.getText().charAt(x) == 'É' || txtAPTra.getText().charAt(x) == 'Í' || txtAPTra.getText().charAt(x) == 'Ó' || txtAPTra.getText().charAt(x) == 'Ú' || txtAPTra.getText().charAt(x) == 32 || txtAPTra.getText().charAt(x) == 46){
                            cont1++;
                        }
                    }
                    if(cont1 == txtAPTra.getText().length()){
                        if(txtAPTra.getText().length()<= 20){
                            //validacion apellido materno
                            int cont2 =0;
                            for(int x=0; x<txtAMTra.getText().length(); x++){
                                if(txtAMTra.getText().charAt(x) >= 65 && txtAMTra.getText().charAt(x) <= 90 || txtAMTra.getText().charAt(x) >= 97 && txtAMTra.getText().charAt(x) <= 122 || txtAMTra.getText().charAt(x) == 'Ñ' ||  txtAMTra.getText().charAt(x) == 'ñ' || txtAMTra.getText().charAt(x) == 'á' || txtAMTra.getText().charAt(x) == 'í' || txtNomTra.getText().charAt(x) == 'ó' || txtNomTra.getText().charAt(x) == 'ú' || txtAMTra.getText().charAt(x) == 'é' || txtAMTra.getText().charAt(x) == 'Á' || txtAMTra.getText().charAt(x) == 'É' || txtAMTra.getText().charAt(x) == 'Í' || txtAMTra.getText().charAt(x) == 'Ó' || txtAMTra.getText().charAt(x) == 'Ú' || txtAMTra.getText().charAt(x) == 32 || txtAMTra.getText().charAt(x) == 46){
                                    cont2++;
                                }
                            }
                            if(cont2 == txtAMTra.getText().length()){
                                if(txtAMTra.getText().length()<= 20){
                                    //validacion del sueldo
                                    String sueldo1 = txtSueldo.getText();
                                    int cont3 =0;
                                    for(int x=0; x<txtSueldo.getText().length(); x++){
                                        if(txtSueldo.getText().charAt(x) >= 48 && txtSueldo.getText().charAt(x) <= 57 || txtSueldo.getText().charAt(x) == 46){
                                            cont3++;
                                        }
                                    }
                                    if(cont3 == sueldo1.length()){
                                        float sueldo = Float.parseFloat(sueldo1);
                                        if(sueldo >= 0 && sueldo <= 9999){
                                            try{
                                                Class.forName(Driver);
                                                con= DriverManager.getConnection(URL,user,pass);
                                                Statement st = con.createStatement();
                                                inse = st.executeUpdate("execute modificarTra '"+txtNomTra.getText()+"','"+txtAPTra.getText()+"','"+txtAMTra.getText()+"','"+sueldo+"','"+Combo.getSelectedItem()+"','"+txtIdTra.getText()+"'");
                                                JOptionPane.showMessageDialog(this, "El trabajador ha sido modificado",
                                                    "Trabajador modificado", JOptionPane.INFORMATION_MESSAGE);
                                                this.dispose();
                                                if(con != null){
                                                    con.close();
                                                }
                                            }
                                            catch(java.lang.ClassNotFoundException e){
                                                System.out.println(e.getMessage());
                                                System.out.println("Problemas al cargar el driver ");
                                            }
                                            catch(SQLException ex){
                                                System.out.println("No se ha realizado la conexion");
                                                System.out.println(ex.getMessage());
                                            }
                                        }
                                        else{
                                            JOptionPane.showMessageDialog(this, "Número de carácteres excedido el sueld puede ser de 1-9999",
                                                "Carácteres excedidos", JOptionPane.ERROR_MESSAGE);
                                        }
                                    }
                                    else{
                                        JOptionPane.showMessageDialog(this, "El sueldo solo admite numero de 0-9",
                                            "Datos no validos", JOptionPane.ERROR_MESSAGE);
                                    }
                                }
                                else{
                                    JOptionPane.showMessageDialog(this, "El apellido materno solo acepta hasta 20 carácteres",
                                        "Número de carácteres excedido", JOptionPane.ERROR_MESSAGE);
                                }
                            }
                            else{
                                JOptionPane.showMessageDialog(this, "El apellido materno solo pueder ser compuesto solo por carácteres de A-Z y de a-z puntos, comas y espacios",
                                    "Datos no validos", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        else{
                            JOptionPane.showMessageDialog(this, "El apellido paterno solo acepta hasta 20 carácteres",
                                "Número de carácteres excedido", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "El apellido paterno solo pueder ser compuesto solo por carácteres de A-Z y de a-z puntos, comas y espacios",
                            "Datos no validos", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this, "El nombre solo aceptan hasta 25 carácteres",
                        "Número de carácteres excedido", JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "El nombre solo pueder ser compuesto solo por carácteres de A-Z y de a-z puntos, comas y espacios",
                    "Datos no validos", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Revise que todos los campos hayan sido llenados",
                "Datos no llenados", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnmodificarIdTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodificarIdTraActionPerformed
        int cont =0;
        if(txtIdTra.getText().length() > 0){
            for(int x=0; x< txtIdTra.getText().length(); x++){
                if(txtIdTra.getText().charAt(x) >= 48 && txtIdTra.getText().charAt(x) <= 57){
                    cont++;
                }
            }
            if(cont == txtIdTra.getText().length()){
                if(txtIdTra.getText().length()== 2){
                    try{
                        Class.forName(Driver);
                        con= DriverManager.getConnection(URL,user,pass);
                        Statement st = con.createStatement();
                        rs = st.executeQuery("execute consultarTra'"+txtIdTra.getText()+"'");
                        rs.next();
                        if(rs.getString(2) != null ){
                            txtNomTra.setText(rs.getString(2));
                            txtAPTra.setText(rs.getString(3));
                            txtAMTra.setText(rs.getString(4));
                            txtSueldo.setText(String.valueOf(rs.getFloat(5)));
                            Combo.setSelectedItem(rs.getString(6));
                            txtNomTra.setEditable(true);
                            txtAPTra.setEditable(true);
                            txtAMTra.setEditable(true);
                            txtSueldo.setEditable(true);
                            btnGuardar.setEnabled(true);
                            Combo.setEnabled(true);
                            txtIdTra.setEditable(false);
                        }
                        else{
                            JOptionPane.showMessageDialog(this, "No hay datos registrados con esta clave",
                                "Clave no encontrada", JOptionPane.INFORMATION_MESSAGE);
                        }
                        if(con != null){
                            con.close();
                        }
                    }
                    catch(java.lang.ClassNotFoundException e){
                        System.out.println(e.getMessage());
                        System.out.println("Problemas al cargar el driver ");
                    }
                    catch(SQLException ex){
                        System.out.println("No se ha realizado la conexion");
                        System.out.println(ex.getMessage());
                        JOptionPane.showMessageDialog(this, "La clave no se encuentra registrado en la base de datos",
                            "Clave no encontrada", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this, "Solo se admiten 2 caráteres de 01 - 99",
                        "Carácteres excedidos", JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Solo se aceptan numeros enteros de 0-9 ",
                    "Datos no validos", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "El campo no ha sido llenado",
                "Datos no llenados", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnmodificarIdTraActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Combo;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnmodificarIdTra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtAMTra;
    private javax.swing.JTextField txtAPTra;
    private javax.swing.JTextField txtIdTra;
    private javax.swing.JTextField txtNomTra;
    private javax.swing.JTextField txtSueldo;
    // End of variables declaration//GEN-END:variables
}
